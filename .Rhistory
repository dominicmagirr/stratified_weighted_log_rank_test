cbind(rbind(data_4, data_5, data_6),
pattern = "Anticipated Delayed Effects"),
cbind(rbind(data_7, data_8, data_9),
pattern = "Null Overall Treatment Effect"))
null_ph_nph$prognostic_effect <- factor(null_ph_nph$prognostic_effect,
levels = c("None", "Moderate", "Strong"))
null_ph_nph$pattern <- factor(null_ph_nph$pattern,
levels = c("Proportional Hazards", "Anticipated Delayed Effects", "Null Overall Treatment Effect"))
#Plos with all tests
plot_power = ggplot(data = null_ph_nph,
mapping = aes(x = prognostic_effect,
y = as.numeric(as.character(value)),
fill = test)) +
facet_wrap(pattern ~ treatment_effect, scales = "free_y") +
geom_bar(stat = "identity", position = position_dodge(), color = "black") +
scale_fill_brewer(palette="Accent",
labels = c(expression("Strat. LR " (tilde(Z))),
expression("Strat. LR from Mehrotra et al. " (Z^n)),
expression("Strat. WLR on sample size scale " (tilde(Z)^wn)),
expression("Strat. WLR on U-statistic scale " (tilde(Z)^wu)),
expression("Strat. WLR on Z-statistic scale " (tilde(Z)^wz)),
expression("Unstrat. LR " (Z)),
expression("Unstrat. WLR " (Z^w)))) +
theme_bw() +
#geom_hline(yintercept = 0.9, linetype = 2) +
geom_hline(yintercept = 0.025, linetype = 2) +
scale_y_continuous("Power") +
xlab("Prognostic effect") +
theme(legend.position = "bottom",
legend.text = element_text(size = 9),
legend.background = element_rect(fill="transparent"),
legend.key = element_rect(fill="transparent"),
legend.title=element_blank(),
legend.text.align = 0)
plot_power
load("~/Desktop/biometrical journal/stratified_weighted_log_rank_test/Data/null_ph_nph_s_star.RData")
#Plos with all tests
plot_power = ggplot(data = null_ph_nph,
mapping = aes(x = prognostic_effect,
y = as.numeric(as.character(value)),
fill = test)) +
facet_wrap(pattern ~ treatment_effect, scales = "free_y") +
geom_bar(stat = "identity", position = position_dodge(), color = "black") +
scale_fill_brewer(palette="Accent",
labels = c(expression("Strat. LR " (tilde(Z))),
expression("Strat. LR from Mehrotra et al. " (Z^n)),
expression("Strat. WLR on sample size scale " (tilde(Z)^wn)),
expression("Strat. WLR on U-statistic scale " (tilde(Z)^wu)),
expression("Strat. WLR on Z-statistic scale " (tilde(Z)^wz)),
expression("Unstrat. LR " (Z)),
expression("Unstrat. WLR " (Z^w)))) +
theme_bw() +
#geom_hline(yintercept = 0.9, linetype = 2) +
geom_hline(yintercept = 0.025, linetype = 2) +
scale_y_continuous("Power") +
xlab("Prognostic effect") +
theme(legend.position = "bottom",
legend.text = element_text(size = 9),
legend.background = element_rect(fill="transparent"),
legend.key = element_rect(fill="transparent"),
legend.title=element_blank(),
legend.text.align = 0)
plot_power
load("~/Desktop/biometrical journal/stratified_weighted_log_rank_test/Data/null_ph_nph_t_star.RData")
load("~/Desktop/biometrical journal/stratified_weighted_log_rank_test/Data/null_ph_nph_t_star.RData")
plot_power
load("~/Desktop/biometrical journal/stratified_weighted_log_rank_test/Data/null_ph_nph_t_star.RData")
load("~/Desktop/biometrical journal/stratified_weighted_log_rank_test/Data/null_ph_nph_t_star.RData")
View(null_ph_nph)
#Produce Figure 4
plot_power = ggplot(data = null_ph_nph,
mapping = aes(x = prognostic_effect,
y = as.numeric(as.character(value)),
fill = test)) +
facet_wrap(pattern ~ treatment_effect, scales = "free_y") +
geom_bar(stat = "identity", position = position_dodge(), color = "black") +
scale_fill_brewer(palette="Accent",
labels = c(expression("Strat. LR " (tilde(Z))),
expression("Strat. LR from Mehrotra et al. " (Z^n)),
expression("Strat. WLR on sample size scale " (tilde(Z)^wn)),
expression("Strat. WLR on U-statistic scale " (tilde(Z)^wu)),
expression("Strat. WLR on Z-statistic scale " (tilde(Z)^wz)),
expression("Unstrat. LR " (Z)),
expression("Unstrat. WLR " (Z^w)))) +
theme_bw() +
geom_hline(yintercept = 0.025, linetype = 2) +
scale_y_continuous("Power") +
xlab("Prognostic effect") +
theme(legend.position = "bottom",
legend.text = element_text(size = 9),
legend.background = element_rect(fill="transparent"),
legend.key = element_rect(fill="transparent"),
legend.title=element_blank(),
legend.text.align = 0)
plot_power
ggsave(paste0(output_path,"Figure_4.pdf"), plot_power, width = 10, height = 7, dpi = 300)
data_path = "~/Desktop/biometrical journal/stratified_weighted_log_rank_test/Data/"
output_path = "~/Desktop/biometrical journal/stratified_weighted_log_rank_test/Outputs/"
code_path = "~/Desktop/biometrical journal/stratified_weighted_log_rank_test/Code/"
source(paste0(code_path,"scenarios_list.R"))
recruitment_model <- list(rec_model="power", rec_period = 9, rec_power = 1)
sim_one_trial <- function(t_end = 24, scenario, t_star = 12, s_star = NULL){
################################################
## strata 1 data
sim_data_1 <- nphRCT::sim_events_delay(
event_model=list(
duration_c = c(scenario$changepoint_1, t_end),
duration_e = c(scenario$changepoint_1, t_end),
lambda_c = scenario$strata_1_c,
lambda_e = scenario$strata_1_e
),
recruitment_model=recruitment_model,
n_c=86,
n_e=86,
max_cal_t = t_end
) %>%
mutate(strata = "first")
################################################
## strata 2 data
sim_data_2 <- nphRCT::sim_events_delay(
event_model=list(
duration_c = c(scenario$changepoint_2, t_end),
duration_e = c(scenario$changepoint_2, t_end),
lambda_c = scenario$strata_2_c,
lambda_e = scenario$strata_2_e
),
recruitment_model=recruitment_model,
n_c=86,
n_e=86,
max_cal_t = t_end
) %>%
mutate(strata = "second")
################################################
## full data
sim_data <- rbind(sim_data_1, sim_data_2)
###############################################
## wlrt
res_strata_0 <- nphRCT::wlrt(Surv(event_time, event_status) ~ group + strata(strata), data = sim_data, method = "mw", t_star = 0)
res_strata <- nphRCT::wlrt(Surv(event_time, event_status) ~ group + strata(strata), data = sim_data, method = "mw", t_star = t_star, s_star = s_star)
res_unstrata_0 <- nphRCT::wlrt(Surv(event_time, event_status) ~ group, data = sim_data, method = "mw", t_star = 0)
res_unstrata <- nphRCT::wlrt(Surv(event_time, event_status) ~ group, data = sim_data, method = "mw", t_star = t_star, s_star = s_star)
#### main Z tests
z <- res_unstrata_0$z
z_w <- res_unstrata$z
tilde_z <- res_strata_0$combined$z
tilde_z_w_z <- res_strata$combined$z
#### create tilde_z_w_u
tilde_z_w_u <- sum(res_strata$by_strata$u) / sqrt(sum(res_strata$by_strata$v_u))
#### create tilde_z_w_n
n <- c(172, 172)
v_u_w <- res_strata$by_strata$v_u
tilde_z_w_n <- sum(res_strata$by_strata$u / v_u_w * n) / sqrt(sum(n^2 / v_u_w))
#### create tilde_z_n
v_u <- res_strata_0$by_strata$v_u
tilde_z_n <- sum(res_strata_0$by_strata$u / v_u * n) / sqrt(sum(n^2 / v_u))
#### return z's
data.frame(z = z,
z_w = z_w,
tilde_z = tilde_z,
tilde_z_w_u = tilde_z_w_u,
tilde_z_w_z = tilde_z_w_z,
tilde_z_n = tilde_z_n,
tilde_z_w_n = tilde_z_w_n)
}
get_power <- function(n_sim = 100, t_end = 24, scenario, t_star = 12, s_star = NULL){
sim_res <- purrr::map_df(rep(t_end, n_sim), sim_one_trial, scenario = scenario, t_star = t_star, s_star = s_star)
apply(sim_res, 2, function(x) mean(x < qnorm(0.025)))
}
data_path = "~/Desktop/biometrical journal/stratified_weighted_log_rank_test/Data/"
output_path = "~/Desktop/biometrical journal/stratified_weighted_log_rank_test/Outputs/"
code_path = "~/Desktop/biometrical journal/stratified_weighted_log_rank_test/Code/"
source(paste0(code_path,"scenarios_list.R"))
recruitment_model <- list(rec_model="power", rec_period = 9, rec_power = 1)
sim_one_trial <- function(t_end = 24, scenario, t_star = 12, s_star = NULL){
################################################
## strata 1 data
sim_data_1 <- nphRCT::sim_events_delay(
event_model=list(
duration_c = c(scenario$changepoint_1, t_end),
duration_e = c(scenario$changepoint_1, t_end),
lambda_c = scenario$strata_1_c,
lambda_e = scenario$strata_1_e
),
recruitment_model=recruitment_model,
n_c=86,
n_e=86,
max_cal_t = t_end
) %>%
mutate(strata = "first")
################################################
## strata 2 data
sim_data_2 <- nphRCT::sim_events_delay(
event_model=list(
duration_c = c(scenario$changepoint_2, t_end),
duration_e = c(scenario$changepoint_2, t_end),
lambda_c = scenario$strata_2_c,
lambda_e = scenario$strata_2_e
),
recruitment_model=recruitment_model,
n_c=86,
n_e=86,
max_cal_t = t_end
) %>%
mutate(strata = "second")
################################################
## full data
sim_data <- rbind(sim_data_1, sim_data_2)
###############################################
## wlrt
res_strata_0 <- nphRCT::wlrt(Surv(event_time, event_status) ~ group + strata(strata), data = sim_data, method = "mw", t_star = 0)
res_strata <- nphRCT::wlrt(Surv(event_time, event_status) ~ group + strata(strata), data = sim_data, method = "mw", t_star = t_star, s_star = s_star)
res_unstrata_0 <- nphRCT::wlrt(Surv(event_time, event_status) ~ group, data = sim_data, method = "mw", t_star = 0)
res_unstrata <- nphRCT::wlrt(Surv(event_time, event_status) ~ group, data = sim_data, method = "mw", t_star = t_star, s_star = s_star)
#### main Z tests
z <- res_unstrata_0$z
z_w <- res_unstrata$z
tilde_z <- res_strata_0$combined$z
tilde_z_w_z <- res_strata$combined$z
#### create tilde_z_w_u
tilde_z_w_u <- sum(res_strata$by_strata$u) / sqrt(sum(res_strata$by_strata$v_u))
#### create tilde_z_w_n
n <- c(172, 172)
v_u_w <- res_strata$by_strata$v_u
tilde_z_w_n <- sum(res_strata$by_strata$u / v_u_w * n) / sqrt(sum(n^2 / v_u_w))
#### create tilde_z_n
v_u <- res_strata_0$by_strata$v_u
tilde_z_n <- sum(res_strata_0$by_strata$u / v_u * n) / sqrt(sum(n^2 / v_u))
#### return z's
data.frame(z = z,
z_w = z_w,
tilde_z = tilde_z,
tilde_z_w_u = tilde_z_w_u,
tilde_z_w_z = tilde_z_w_z,
tilde_z_n = tilde_z_n,
tilde_z_w_n = tilde_z_w_n)
}
get_power <- function(n_sim = 100, t_end = 24, scenario, t_star = 12, s_star = NULL){
sim_res <- purrr::map_df(rep(t_end, n_sim), sim_one_trial, scenario = scenario, t_star = t_star, s_star = s_star)
apply(sim_res, 2, function(x) mean(x < qnorm(0.025)))
}
load("~/Desktop/biometrical journal/stratified_weighted_log_rank_test/Data/null_ph_nph_t_star.RData")
#Produce Figure 4
plot_figure_4 = ggplot(data = null_ph_nph,
mapping = aes(x = prognostic_effect,
y = as.numeric(as.character(value)),
fill = test)) +
facet_wrap(pattern ~ treatment_effect, scales = "free_y") +
geom_bar(stat = "identity", position = position_dodge(), color = "black") +
scale_fill_brewer(palette="Accent",
labels = c(expression("Strat. LR " (tilde(Z))),
expression("Strat. LR from Mehrotra et al. " (Z^n)),
expression("Strat. WLR on sample size scale " (tilde(Z)^wn)),
expression("Strat. WLR on U-statistic scale " (tilde(Z)^wu)),
expression("Strat. WLR on Z-statistic scale " (tilde(Z)^wz)),
expression("Unstrat. LR " (Z)),
expression("Unstrat. WLR " (Z^w)))) +
theme_bw() +
geom_hline(yintercept = 0.025, linetype = 2) +
scale_y_continuous("Power") +
xlab("Prognostic effect") +
theme(legend.position = "bottom",
legend.text = element_text(size = 9),
legend.background = element_rect(fill="transparent"),
legend.key = element_rect(fill="transparent"),
legend.title=element_blank(),
legend.text.align = 0)
plot_figure_4
ggsave(paste0(output_path,"Figure_4.pdf"), plot_figure_4, width = 10, height = 7, dpi = 300)
load("~/Desktop/biometrical journal/stratified_weighted_log_rank_test/Data/null_ph_nph_s_star.RData")
#Produce Figure 5
plot_figure_5 = ggplot(data = null_ph_nph,
mapping = aes(x = prognostic_effect,
y = as.numeric(as.character(value)),
fill = test)) +
facet_wrap(pattern ~ treatment_effect, scales = "free_y") +
geom_bar(stat = "identity", position = position_dodge(), color = "black") +
scale_fill_brewer(palette="Accent",
labels = c(expression("Strat. LR " (tilde(Z))),
expression("Strat. LR from Mehrotra et al. " (Z^n)),
expression("Strat. WLR on sample size scale " (tilde(Z)^wn)),
expression("Strat. WLR on U-statistic scale " (tilde(Z)^wu)),
expression("Strat. WLR on Z-statistic scale " (tilde(Z)^wz)),
expression("Unstrat. LR " (Z)),
expression("Unstrat. WLR " (Z^w)))) +
theme_bw() +
#geom_hline(yintercept = 0.9, linetype = 2) +
geom_hline(yintercept = 0.025, linetype = 2) +
scale_y_continuous("Power") +
xlab("Prognostic effect") +
theme(legend.position = "bottom",
legend.text = element_text(size = 9),
legend.background = element_rect(fill="transparent"),
legend.key = element_rect(fill="transparent"),
legend.title=element_blank(),
legend.text.align = 0)
plot_figure_5
ggsave(paste0(output_path,"Figure_5.pdf"), plot_figure_5, width = 10, height = 7, dpi = 300)
library(dplyr)
library(ggplot2)
library(survival)
data_path = "~/Desktop/biometrical journal/stratified_weighted_log_rank_test/Data/"
output_path = "~/Desktop/biometrical journal/stratified_weighted_log_rank_test/Outputs/"
code_path = "~/Desktop/biometrical journal/stratified_weighted_log_rank_test/Code/"
source(paste0(code_path,"scenarios_list.R"))
surv_2 <- function(t, lambdas, changepoint){
p_1 <- exp(-lambdas[1] * t)
p_2 <- exp(-lambdas[1] * changepoint) * exp(-lambdas[2] * pmax(0, (t - changepoint)))
(t < changepoint) * p_1 + (t >= changepoint) * p_2
}
get_RMST = function(lambdas, changepoint, tau){
rmst = integrate(surv_2,
lower = 0,
upper = tau,
lambdas = lambdas,
changepoint = changepoint)$value
return(rmst)
}
plot_strat <- function(scenario, t_end = 24, prop_strat_1 = 0.5){
t_seq <- seq(0, t_end, length.out = 100)
t_length <- length(t_seq)
s_c_1 <- surv_2(t_seq, lambdas = scenario$strata_1_c, changepoint = scenario$changepoint_1)
s_e_1 <- surv_2(t_seq, lambdas = scenario$strata_1_e, changepoint = scenario$changepoint_1)
s_c_2 <- surv_2(t_seq, lambdas = scenario$strata_2_c, changepoint = scenario$changepoint_2)
s_e_2 <- surv_2(t_seq, lambdas = scenario$strata_2_e, changepoint = scenario$changepoint_2)
s_c <- s_c_1 * prop_strat_1 + s_c_2 * (1 - prop_strat_1)
s_e <- s_e_1 * prop_strat_1 + s_e_2 * (1 - prop_strat_1)
rmst_c_1 <- get_RMST(scenario$strata_1_c, scenario$changepoint_1, t_end)
rmst_e_1 <- get_RMST(scenario$strata_1_e, scenario$changepoint_1, t_end)
rmst_c_2 <- get_RMST(scenario$strata_2_c, scenario$changepoint_2, t_end)
rmst_e_2 <- get_RMST(scenario$strata_2_e, scenario$changepoint_2, t_end)
rmst_c <- rmst_c_1 * prop_strat_1 + rmst_c_2 * (1 - prop_strat_1)
rmst_e <- rmst_e_1 * prop_strat_1 + rmst_e_2 * (1 - prop_strat_1)
df_1 <- data.frame(t_seq = rep(t_seq, 2),
surv = c(s_c_1, s_e_1),
arm = rep(c("Control", "Experimental"), each = t_length),
stratum = "First stratum",
rmst = rep(c(rmst_c_1, rmst_e_1) %>% round(1), each = t_length))
df_2 <- data.frame(t_seq = rep(t_seq, 2),
surv = c(s_c_2, s_e_2),
arm = rep(c("Control", "Experimental"), each = t_length),
stratum = "Second stratum",
rmst = rep(c(rmst_c_2, rmst_e_2) %>% round(1), each = t_length))
df_m <- data.frame(t_seq = rep(t_seq, 2),
surv = c(s_c, s_e),
arm = rep(c("Control", "Experimental"), each = t_length),
stratum = "Overall",
rmst = rep(c(rmst_c, rmst_e) %>% round(1), each = t_length))
plots_df = rbind(df_1, df_2, df_m) %>%
mutate(prognosis = scenario$label,
effect = scenario$effect,
scenario = scenario$scenario_label)
return(plots_df)
}
################################
## Proportional Hazards
################################
plot_1_A <- plot_strat(scenario_1_A)
plot_1_B <- plot_strat(scenario_1_B)
plot_1_C <- plot_strat(scenario_1_C)
##
plot_2_A <- plot_strat(scenario_2_A)
plot_2_B <- plot_strat(scenario_2_B)
plot_2_C <- plot_strat(scenario_2_C)
##
plot_3_A <- plot_strat(scenario_3_A)
plot_3_B <- plot_strat(scenario_3_B)
plot_3_C <- plot_strat(scenario_3_C)
################################
scenario_PH = rbind(plot_1_A,
plot_1_B,
plot_1_C,
##
plot_2_A,
plot_2_B,
plot_2_C,
##
plot_3_A,
plot_3_B,
plot_3_C)
scenario_PH$prognosis = factor(scenario_PH$prognosis,
levels = c("Non-prog.","Moderate prog.","Strong prog."))
scenario_PH$stratum = factor(scenario_PH$stratum,
levels = c("First stratum", "Second stratum", "Overall"))
plot_scenarios_PH <- ggplot(scenario_PH,
aes(x = t_seq, y = surv, color = arm)) +
geom_line(size = 1) +
scale_y_continuous("Survival", limits = c(0,1)) +
scale_x_continuous("Time", limits = c(0,25)) +
theme_bw() +
facet_grid(scenario + prognosis ~ stratum ) +
theme(legend.position = "bottom",
legend.text = element_text(size = 9),
legend.background = element_rect(fill="transparent"),
legend.key = element_rect(fill="transparent"),
legend.title=element_blank()) +
geom_text(scenario_PH %>% filter(arm == "Control") %>% group_by(scenario, prognosis, stratum) %>% slice(1),
mapping = aes(x=20, y=0.82, label=paste("RMST = ",rmst)), size=3.25, show.legend = FALSE) +
geom_text(scenario_PH %>% filter(arm == "Experimental") %>% group_by(scenario, prognosis, stratum) %>% slice(1),
mapping = aes(x=20, y=0.95, label=paste("RMST = ",rmst)), size=3.25, show.legend = FALSE)
plot_scenarios_PH
plot_scenarios_PH <- ggplot(scenario_PH,
aes(x = t_seq, y = surv, color = arm)) +
geom_line(size = 1) +
scale_y_continuous("Survival", limits = c(0,1)) +
scale_x_continuous("Time", limits = c(0,25)) +
theme_bw() +
facet_grid(scenario + prognosis ~ stratum ) +
theme(legend.position = "bottom",
legend.text = element_text(size = 9),
legend.background = element_rect(fill="transparent"),
legend.key = element_rect(fill="transparent"),
legend.title=element_blank()) +
geom_text(scenario_PH %>% filter(arm == "Control") %>% group_by(scenario, prognosis, stratum) %>% slice(1),
mapping = aes(x=20, y=0.82, label=paste("RMST = ",rmst)), size=3.25, show.legend = FALSE) +
geom_text(scenario_PH %>% filter(arm == "Experimental") %>% group_by(scenario, prognosis, stratum) %>% slice(1),
mapping = aes(x=20, y=0.95, label=paste("RMST = ",rmst)), size=3.25, show.legend = FALSE)
ggsave(paste0(output_path,"Figure_6.pdf"), plot_scenarios_PH, width = 8, height = 12, dpi = 300)
################################
## Non-Proportional Hazards
################################
plot_4_A <- plot_strat(scenario_4_A)
plot_4_B <- plot_strat(scenario_4_B)
plot_4_C <- plot_strat(scenario_4_C)
##
plot_5_A <- plot_strat(scenario_5_A)
plot_5_B <- plot_strat(scenario_5_B)
plot_5_C <- plot_strat(scenario_5_C)
##
plot_6_A <- plot_strat(scenario_6_A)
plot_6_B <- plot_strat(scenario_6_B)
plot_6_C <- plot_strat(scenario_6_C)
################################
scenario_NPH = rbind(plot_4_A,
plot_4_B,
plot_4_C,
##
plot_5_A,
plot_5_B,
plot_5_C,
##
plot_6_A,
plot_6_B,
plot_6_C)
scenario_NPH$prognosis = factor(scenario_NPH$prognosis,
levels = c("Non-prog.","Moderate prog.","Strong prog."))
scenario_NPH$stratum = factor(scenario_NPH$stratum,
levels = c("First stratum", "Second stratum", "Overall"))
plot_scenarios_NPH <- ggplot(scenario_NPH,
aes(x = t_seq, y = surv, color = arm)) +
geom_line(size = 1) +
scale_y_continuous("Survival", limits = c(0,1)) +
scale_x_continuous("Time", limits = c(0,25)) +
theme_bw() +
facet_grid(scenario + prognosis ~ stratum ) +
theme(legend.position = "bottom",
legend.text = element_text(size = 9),
legend.background = element_rect(fill="transparent"),
legend.key = element_rect(fill="transparent"),
legend.title=element_blank()) +
geom_text(scenario_NPH %>% filter(arm == "Control") %>% group_by(scenario, prognosis, stratum) %>% slice(1),
mapping = aes(x=20, y=0.82, label=paste("RMST = ",rmst)), size=3.25, show.legend = FALSE) +
geom_text(scenario_NPH %>% filter(arm == "Experimental") %>% group_by(scenario, prognosis, stratum) %>% slice(1),
mapping = aes(x=20, y=0.95, label=paste("RMST = ",rmst)), size=3.25, show.legend = FALSE)
plot_scenarios_NPH
ggsave(paste0(output_path,"Figure_7.pdf"), plot_scenarios_NPH, width = 8, height = 12, dpi = 300)
################################
## Null
################################
plot_7_A <- plot_strat(scenario_7_A)
plot_7_B <- plot_strat(scenario_7_B)
plot_7_C <- plot_strat(scenario_7_C)
##
plot_8_A <- plot_strat(scenario_8_A)
plot_8_B <- plot_strat(scenario_8_B)
plot_8_C <- plot_strat(scenario_8_C)
##
plot_9_A <- plot_strat(scenario_9_A)
plot_9_B <- plot_strat(scenario_9_B)
plot_9_C <- plot_strat(scenario_9_C)
################################
scenario_null = rbind(plot_7_A,
plot_7_B,
plot_7_C,
##
plot_8_A,
plot_8_B,
plot_8_C,
##
plot_9_A,
plot_9_B,
plot_9_C)
scenario_null$prognosis = factor(scenario_null$prognosis,
levels = c("Non-prog.","Moderate prog.","Strong prog."))
scenario_null$stratum = factor(scenario_null$stratum,
levels = c("First stratum", "Second stratum", "Overall"))
plot_scenarios_null <- ggplot(scenario_null,
aes(x = t_seq, y = surv, color = arm)) +
geom_line(size = 1) +
scale_y_continuous("Survival", limits = c(0,1)) +
scale_x_continuous("Time", limits = c(0,25)) +
theme_bw() +
facet_grid(scenario + prognosis ~ stratum ) +
theme(legend.position = "bottom",
legend.text = element_text(size = 9),
legend.background = element_rect(fill="transparent"),
legend.key = element_rect(fill="transparent"),
legend.title=element_blank()) +
geom_text(scenario_null %>% filter(arm == "Control") %>% group_by(scenario, prognosis, stratum) %>% slice(1),
mapping = aes(x=20, y=0.82, label=paste("RMST = ",rmst)), size=3.25, show.legend = FALSE) +
geom_text(scenario_null %>% filter(arm == "Experimental") %>% group_by(scenario, prognosis, stratum) %>% slice(1),
mapping = aes(x=20, y=0.95, label=paste("RMST = ",rmst)), size=3.25, show.legend = FALSE)
ggsave(paste0(output_path,"Figure_8.pdf"), plot_scenarios_null, width = 8, height = 12, dpi = 300)
